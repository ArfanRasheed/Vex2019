#include "robot-config.h"

//Max Total Points: 3pts
//Min Total Points: 3 pts
//Starting Point: BS1
//Language: Vex C++

void moveForward(int speed){
    if speed == 0 {
        LeftFront.stop();
        LeftBack.stop();
        RightFront.stop();
        RightBack.stop();
    }
    else {
    //Spin motors in fwd direciton; set velocity to 50rpm
    LeftFront.spin(directionType::fwd,speed,velocityUnits::rpm);
    LeftBack.spin(directionType::fwd,speed,velocityUnits::rpm);
    RightFront.spin(directionType::fwd,speed,velocityUnits::rpm);
    RightBack.spin(directionType::fwd,speed,velocityUnits::rpm);
    }
} 
void turnRight(int speed){
    if speed == 0 {
        LeftFront.stop();
        LeftBack.stop();
        RightFront.stop();
        RightBack.stop();
    }
    else {
        //Spin motors in fwd direciton; set velocity to 50rpm
        LeftFront.spin(directionType::fwd,-speed,velciotyUnits::rpm);
        LeftBack.spin(directionType::fwd,-speed,velciotyUnits::rpm);
        RightFront.spin(directionType::fwd,speed,velocityUnits::rpm);
        RightBack.spin(directionType::fwd,speed,velocityUnits::rpm);
    }
} 

void turnLeft(int speed){
    if speed == 0 {
        LeftFront.stop();
        LeftBack.stop();
        RightFront.stop();
        RightBack.stop();
    }
    else {
        //Spin motors in fwd direciton; set velocity to 50rpm
        LeftFront.spin(directionType::fwd,speed,velciotyUnits::rpm);
        LeftBack.spin(directionType::fwd,speed,velciotyUnits::rpm);
        RightFront.spin(directionType::fwd,-speed,velciotyUnits::rpm);
        RightBack.spin(directionType::fwd,-speed,velciotyUnits::rpm);
    }
}

void distance(){
    double pi == 3.1415926535897;   
    return 4*pi*(RightEncoder.rotation(rotationUnits::deg)/360);
}

int main() {
   //Resets encoder values sensor values 
   LeftEncoder.resetRotation();
   RightEncoder.resetRotation();
   
   //Move forward to get in line with BPL
   while(abs(distance() < 24)) {
       moveForward(100);
   }
   moveForward(0);
   
   //Turn 90 degrees counter-clockwise, facing towards BPL
   while(abs(Gyro.value() < 880){
       turnLeft(100);
   }
   turnLeft(0);
   
   //Move forward onto BPL (3 points)
   moveForward(100);
   task::sleep(2750);
}
    
         
            
